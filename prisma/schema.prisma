// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts   Account[]
  subscribes Subscribe[]
  videos     Video[]
  commets    Comment[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Subscribe {
  id     String @id @default(cuid())
  userId String

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  user     User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Video {
  id          String @id @default(cuid())
  userId      String
  title       String
  description String @default("")
  video       String
  viewCount   Int    @default(0)

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  comments Comment[]
  user     User      @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Comment {
  id      String @id @default(cuid())
  userId  String
  comment String
  videoId String
  video   Video? @relation(fields: [videoId], references: [id], onDelete: Cascade)

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  User     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([videoId])
  @@index([userId])
}
